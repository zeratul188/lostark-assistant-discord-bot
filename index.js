const { Client, Intents, MessageEmbed, MessageActionRow, MessageButton, ButtonInteraction, MessageComponentInteraction } = require('discord.js');
const { confirm, edit } = require('./channel-ids.json');
const { jobs, servers, job_emojis } = require('./datas.json');
const colors = require('./colors.json');

//const { token } = require('./config.json'); //ÌÖåÏä§Ìä∏Ïö©

const prefix = '!';

const client = new Client({ intents: [
    Intents.FLAGS.GUILDS,
    Intents.FLAGS.GUILD_MESSAGES,
    Intents.FLAGS.GUILD_MESSAGE_REACTIONS,
    Intents.FLAGS.GUILD_MEMBERS,
    Intents.FLAGS.GUILD_EMOJIS_AND_STICKERS
    ],
    partials: ['MESSAGE', 'CHANNEL', 'REACTION']
});

/*
client.on('messageReactionAdd', async (reaction, user) => {
    console.log(`emoji : ${reaction.emoji.name}`);
    console.log(`Message Channel : ${reaction.message.channelId}\nConfirm Channel : ${confirm}`);
    if (reaction.message.channelId === confirm) {
        
    }
});
*/

//client.on('messageReactionRemove', )

function createCertification(clone) {
    var row = new MessageActionRow()
            .addComponents(
                new MessageButton()
                    .setLabel('Ïù∏Ï¶ùÎ∞õÍ∏∞')
                    .setStyle('PRIMARY')
                    .setCustomId('btnConfirm'),
                new MessageButton()
                    .setLabel('Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ Ïï±')
                    .setStyle('LINK')
                    .setURL('https://play.google.com/store/apps/details?id=com.lostark.lostarkapplication'),
                new MessageButton()
                    .setLabel('Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ ÏÇ¨Ïù¥Ìä∏')
                    .setStyle('LINK')
                    .setURL('https://lostark-assistant-next.vercel.app')
    );

    clone.send({
        content: `:tada:  **Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ ÎîîÏä§ÏΩîÎìú**Ïóê Ïò§Ïã†Í±∏ ÌôòÏòÅÌï©ÎãàÎã§!! :tada:
Ï†ÄÌù¨ ÎîîÏä§ÏΩîÎìúÎ•º ÏÇ¨Ïö©ÌïòÏãúÎ†§Î©¥ ÏïÑÎûòÏùò **Í∑úÏπô**ÏùÑ Íº≠ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.

- **Ï±ÑÌåÖ, ÏùåÏÑ±**ÏùÑ ÏÇ¨Ïö©ÌïòÏã§ Îïå ÏÉÅÎåÄÎ∞©ÏùÑ ÎπÑÌïòÌïòÎäî Î∞úÏñ∏, **ÏöïÏÑ§** Îì±ÏùÑ ÏÇ¨Ïö©ÌïòÏßÄ ÎßàÏÑ∏Ïöî.
- Ï±ÑÌåÖÌï† ÎÇ¥Ïö©Ïù¥ ÏûàÏùÑ Îïå Ï£ºÏ†úÏóê ÎßûÎäî Ïπ¥ÌÖåÍ≥†Î¶¨Ïóê ÏûÖÎ†•Ìï¥Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§. ex) Ï∞ΩÏà†ÏÇ¨ Í¥ÄÎ†® ÏñòÍ∏∞Î©¥ Ï∞ΩÏà†ÏÇ¨ Ï±ÑÌåÖÎ∞©ÏùÑ Ïù¥Ïö©, ÏûêÏú†Ï±ÑÌåÖÎ∞©ÏóêÏÑú Í∞ÑÎã®ÌïòÍ≤å ÏñòÍ∏∞ÌïòÎäî Ï†ïÎèÑÎäî Ïù∏Ï†ï
- Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ ÏÑúÎ≤ÑÏóêÏÑú Í∞úÏù∏ Í±∞ÎûòÎäî **Í∏àÏßÄ**ÏûÖÎãàÎã§. Ï†ÄÌù¨ ÏÑúÎ≤ÑÏóêÏÑú ÏùºÏñ¥ÎÇú Í∏àÏ†ÑÏ†Å ÏÇ¨Í∏∞Ïóê ÏùòÌïú ÌîºÌï¥Îäî Ï†ÄÌù¨Í∞Ä Ï±ÖÏûÑÏßÄÏßÄ ÏïäÏäµÎãàÎã§.
- Ï†ÄÌù¨ ÎîîÏä§ÏΩîÎìú ÏÑúÎ≤ÑÎäî **Í∑úÏπô**Í≥º **Í≥µÏßÄÏÇ¨Ìï≠**ÏùÑ ÌôïÏù∏ÌïòÏßÄ ÏïäÏïÑ ÏÉùÍ∏∞Îäî Î∂àÏù¥ÏùµÏóê ÎåÄÌï¥ÏÑúÎäî Ï±ÖÏûÑÏßÄÏßÄ ÏïäÏäµÎãàÎã§.

Ïù∏Ï¶ù ÌõÑ **__üßç-Î≥ÑÎ™Ö-Î≥ÄÍ≤Ω__**ÏóêÏÑú Î≥ÑÎ™ÖÏùÑ Î≥ÄÍ≤ΩÌï¥Ï£ºÏãúÍ≥†, **__üè¢-ÏßÅÏóÖ-ÏÑ§Ï†ï__**ÏóêÏÑú ÏßÅÏóÖÏùÑ Î≥ÄÍ≤ΩÌï¥Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.
`,
        components: [row]
    });

    const filter = i => {
        return i.customId === 'btnConfirm';
    };

    const collector = clone.createMessageComponentCollector({
        filter
    });

    
    collector.on('collect', async i => {
        if (i.customId === 'btnConfirm') {
            const add_role = i.guild.roles.cache.find(role => role.name === 'Ïù∏Ï¶ùÏûê');
            //const add_role = message.guild.roles.cache.find(role => role.name === 'ÏÇ¨Ïö©Ïûê');
            var isDouble = false;
            for (let j = 0; j < i.member.roles.cache.size; j++) {
                if (i.member.roles.cache.at(j).name === 'Ïù∏Ï¶ùÏûê' || i.member.roles.cache.at(j).name === 'ÏÇ¨Ïö©Ïûê') {
                    isDouble = true;
                    break;
                }
            }
            if (isDouble) {
                await i.reply({
                    content: 'Ïù¥ÎØ∏ Í∂åÌïúÏùÑ Î∂ÄÏó¨Î∞õÏïòÏäµÎãàÎã§.',
                    ephemeral: true
                });
            } else {
                i.member.roles.add(add_role);
                client.channels.cache.get('945891054408847470').send(`\`\`\`${i.member.user.username}(${i.member.id})ÎãòÏù¥ \"ÏÇ¨Ïö©Ïûê\" Í∂åÌïúÏùÑ Î∂ÄÏó¨Î∞õÏïòÏäµÎãàÎã§.\`\`\``);
                await i.reply({
                    content: `\"ÏÇ¨Ïö©Ïûê\" Í∂åÌïúÏùÑ ÌöçÎìùÌïòÏÖ®ÏäµÎãàÎã§.
${client.channels.cache.get('945902634898980914').toString()}ÏóêÏÑú Î≥ÑÎ™ÖÏùÑ Î≥ÄÍ≤ΩÌï¥ Ï£ºÏãúÍ≥†, ${client.channels.cache.find(channel => channel.name === 'üè¢-ÏßÅÏóÖ-ÏÑ§Ï†ï').toString()}ÏóêÏÑú ÏßÅÏóÖÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.`,
                    ephemeral: true
                });
            }
        }
    });

    collector.on('end', collected => {
        console.log(`Collected ${collected.size} items`);
    });
}

function processCertification() {
    var channel = client.channels.cache.find(channel => channel.name === 'üëå-ÏÇ¨Ïö©Ïûê-Ïù∏Ï¶ù');
    channel.clone().then(clone => createCertification(clone));
    channel.delete();
}

function createJob(clone) {
    var job1_row = new MessageActionRow()
    .addComponents(
        new MessageButton()
            .setLabel('Î≤ÑÏÑúÏª§')
            .setStyle('SECONDARY')
            .setCustomId('btnJob1'),
        new MessageButton()
            .setLabel('ÎîîÏä§Ìä∏Î°úÏù¥Ïñ¥')
            .setStyle('SECONDARY')
            .setCustomId('btnJob2'),
        new MessageButton()
            .setLabel('ÏõåÎ°úÎìú')
            .setStyle('SECONDARY')
            .setCustomId('btnJob3'),
        new MessageButton()
            .setLabel('ÌôÄÎ¶¨ÎÇòÏù¥Ìä∏')
            .setStyle('SECONDARY')
            .setCustomId('btnJob4'),
    );
    var job2_row = new MessageActionRow()
    .addComponents(
        new MessageButton()
            .setLabel('Î∞∞ÌãÄÎßàÏä§ÌÑ∞')
            .setStyle('SECONDARY')
            .setCustomId('btnJob5'),
        new MessageButton()
            .setLabel('Ïù∏ÌååÏù¥ÌÑ∞')
            .setStyle('SECONDARY')
            .setCustomId('btnJob6'),
        new MessageButton()
            .setLabel('Í∏∞Í≥µÏÇ¨')
            .setStyle('SECONDARY')
            .setCustomId('btnJob7'),
        new MessageButton()
            .setLabel('Ï∞ΩÏà†ÏÇ¨')
            .setStyle('SECONDARY')
            .setCustomId('btnJob8'),
        new MessageButton()
            .setLabel('Ïä§Ìä∏ÎùºÏù¥Ïª§')
            .setStyle('SECONDARY')
            .setCustomId('btnJob9'),
    );
    var job3_row = new MessageActionRow()
    .addComponents(
        new MessageButton()
            .setLabel('Îç∞ÎπåÌóåÌÑ∞')
            .setStyle('SECONDARY')
            .setCustomId('btnJob10'),
        new MessageButton()
            .setLabel('Î∏îÎûòÏä§ÌÑ∞')
            .setStyle('SECONDARY')
            .setCustomId('btnJob11'),
        new MessageButton()
            .setLabel('Ìò∏ÌÅ¨ÏïÑÏù¥')
            .setStyle('SECONDARY')
            .setCustomId('btnJob12'),
        new MessageButton()
            .setLabel('Ïä§Ïπ¥Ïö∞ÌÑ∞')
            .setStyle('SECONDARY')
            .setCustomId('btnJob13'),
        new MessageButton()
            .setLabel('Í±¥Ïä¨ÎßÅÏñ¥')
            .setStyle('SECONDARY')
            .setCustomId('btnJob14'),
    );
    var job4_row = new MessageActionRow()
    .addComponents(
        new MessageButton()
            .setLabel('ÏïÑÎ•¥Ïπ¥ÎÇò')
            .setStyle('SECONDARY')
            .setCustomId('btnJob15'),
        new MessageButton()
            .setLabel('ÏÑúÎ®∏ÎÑà')
            .setStyle('SECONDARY')
            .setCustomId('btnJob16'),
        new MessageButton()
            .setLabel('Î∞îÎìú')
            .setStyle('SECONDARY')
            .setCustomId('btnJob17'),
        new MessageButton()
            .setLabel('ÏÜåÏÑúÎ¶¨Ïä§')
            .setStyle('SECONDARY')
            .setCustomId('btnJob18'),
    );
    var job5_row = new MessageActionRow()
    .addComponents(
        new MessageButton()
            .setLabel('Îç∞Î™®Îãâ')
            .setStyle('SECONDARY')
            .setCustomId('btnJob19'),
        new MessageButton()
            .setLabel('Î∏îÎ†àÏù¥Îìú')
            .setStyle('SECONDARY')
            .setCustomId('btnJob20'),
        new MessageButton()
            .setLabel('Î¶¨Ìçº')
            .setStyle('SECONDARY')
            .setCustomId('btnJob21'),
        new MessageButton()
            .setLabel('ÎèÑÌôîÍ∞Ä')
            .setStyle('SECONDARY')
            .setCustomId('btnJob22')
    );

    clone.send({
        content: `:office: **ÏßÅÏóÖ**ÏùÑ ÏÑ†ÌÉùÌï† Îïå ÏïÑÎûò ÏßÅÏóÖÎì§ÏùÑ ÌôïÏù∏ÌïòÏã† ÌõÑ **Î≥∏Ïù∏ Ï∫êÎ¶≠ÌÑ∞**Ïùò ÏßÅÏóÖÏùÑ ÏÑ†ÌÉùÌïòÏãúÎ©¥ **ÏßÅÏóÖ Ïó≠Ìï†**Ïù¥ Ï∂îÍ∞ÄÎê©ÎãàÎã§.

Ïù¥ÎØ∏ ÏßÅÏóÖÏùÑ ÏÑ†ÌÉùÌï¥ÎèÑ Îã§Î•∏ ÏßÅÏóÖÏúºÎ°ú Î≥ÄÍ≤ΩÌï† Í≤ΩÏö∞ Îã§Î•∏ ÏßÅÏóÖÏùÑ ÏÑ†ÌÉùÌïòÎ©¥ ÏõêÎûò ÏßÅÏóÖÏùÄ ÏÇ≠Ï†úÎêòÍ≥† ÏÉàÎ°úÏö¥ ÏßÅÏóÖÏù¥ Ï∂îÍ∞ÄÎê©ÎãàÎã§.
        
Ïù∏Ï¶ù ÌõÑ ÏßÅÏóÖ ÏÑ†ÌÉù ÌõÑ Î≥ÑÎ™ÖÏùÑ Î≥ÄÍ≤ΩÌïòÏßÄ ÏïäÏúºÏÖ®Îã§Î©¥ ${client.channels.cache.get('945902634898980914').toString()}ÏóêÏÑú **Î≥ÑÎ™Ö**ÏùÑ Î≥ÄÍ≤ΩÌï¥Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.`,
        components: [job1_row, job2_row, job3_row, job4_row, job5_row]
    });

    const filter = i => {
        var result = false;
        for (let index = 0; index < 22; index++) {
            if (i.customId === 'btnJob'+(index+1)) {
                result = true;
                break;
            }
        }
        return result;
    };

    const collector = clone.createMessageComponentCollector({
        filter
    });
    
    collector.on('collect', async i => {
        var undo_job = 'none';
        var job = 'none';
        for (let index = 0; index < 22; index++) {
            if (i.customId === 'btnJob'+(index+1)) {
                var isDouble = false;
                job = jobs[index];
                for (let t = 0; t < i.member.roles.cache.size; t++) {
                    if (jobs.indexOf(i.member.roles.cache.at(t).name) !== -1) {
                        const undo_job_role = i.guild.roles.cache.find(role => role.name === i.member.roles.cache.at(t).name);
                        undo_job = undo_job_role.name;
                        i.member.roles.remove(undo_job_role);
                        isDouble = true;
                        break;
                    }
                }
                const job_role = i.guild.roles.cache.find(role => role.name === job);
                i.member.roles.add(job_role);

                if (isDouble) {
                    await i.reply({
                        content: `\"${undo_job}\"ÏóêÏÑú \"${job}\"ÏúºÎ°ú ÏßÅÏóÖÏùÑ Î≥ÄÍ≤ΩÌïòÏÖ®ÏäµÎãàÎã§.`,
                        ephemeral: true
                    });
                } else {
                    await i.reply({
                        content: `\"${job}\" ÏßÅÏóÖÏùÑ ÏÑ§Ï†ïÌïòÏÖ®ÏäµÎãàÎã§.`,
                        ephemeral: true
                    });
                }
                
                break;
            }
        }
    });

    collector.on('end', collected => {
        console.log(`Collected ${collected.size} items`);
    });
}

function processJob() {
    var channel = client.channels.cache.find(channel => channel.name === 'üè¢-ÏßÅÏóÖ-ÏÑ§Ï†ï');
    channel.clone().then(clone => createJob(clone));
    channel.delete();
}

client.once('ready', () => {
    console.log("LAA Bot is ready!");
    console.log(`Prefix : ${prefix}`);

    processCertification();
    processJob();
});

client.on('message', async message => {
    if (message.channelId === '945902634898980914') {
        if (message.content.charAt(0) === prefix) {
            var isMember = false;
            for (let t = 0; t < message.member.roles.cache.size; t++) {
                if (message.member.roles.cache.at(t).name === 'ÏÇ¨Ïö©Ïûê') {
                    isMember = true;
                }
            }
            if (!isMember) {
                const role = message.guild.roles.cache.find(role => role.name === 'ÏÇ¨Ïö©Ïûê');
                message.member.roles.add(role);
            }
            message.member.setNickname(message.content.substring(1));
            client.users.cache.get(message.author.id).send(`\`\`\`Î≥ÑÎ™ÖÏùÑ Î≥ÄÍ≤ΩÌïòÏòÄÏäµÎãàÎã§. "ÏÇ¨Ïö©Ïûê" Ïó≠Ìï†ÏùÑ Î∂ÄÏó¨Î∞õÏïòÏäµÎãàÎã§.\`\`\``);
        }
        message.delete();
    } else {
        if (message.content.split(' ')[0] === prefix+'Ï†ïÎ≥¥') {
            var roleList = '';
            var jobList = '';
            for (let i = 0; i < message.member.roles.cache.size-1; i++) {
                if (jobs.indexOf(message.member.roles.cache.at(i).name) !== -1) {
                    jobList += message.member.roles.cache.at(i).name+'\n';
                } else {
                    roleList += message.member.roles.cache.at(i).name+'\n';
                }
            }

            const informationEmbed = new MessageEmbed()
                .setColor(colors.keycard)
                .setTitle(message.member.nickname)
                .setThumbnail(message.author.avatarURL())
                .addFields(
                    { name: 'Î≥∏Ïù∏ Ïó≠Ìï†', value: roleList, inline: true},
                    { name: 'ÌÅ¥ÎûòÏä§', value: jobList, inline: true}
                )
                .setFooter({
                    text: 'Lostark Assistant',
                    iconURL: 'https://cdn.discordapp.com/attachments/941186050741649489/941186087672500284/app_icon.png'
                });

            message.reply({
                ephemeral: true,
                embeds: [informationEmbed]
            });
        } else if (message.content.split(' ')[0] === prefix+'ÎèÑÏõÄ') {

            const row = new MessageActionRow()
			.addComponents(
                new MessageButton()
					.setLabel('Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ Ïï±')
					.setStyle('LINK')
                    .setURL('https://play.google.com/store/apps/details?id=com.lostark.lostarkapplication')
            );

            const helpEmbed = new MessageEmbed()
                .setColor(colors.keycard)
                .setTitle('LAA Bot Î™ÖÎ†πÏñ¥')
                .setDescription('LAA BotÏùò Î™ÖÎ†πÏñ¥Îì§Ïùò ÏÇ¨Ïö©Î≤ïÏùÑ ÌôïÏù∏ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.')
                .setThumbnail('https://cdn.discordapp.com/attachments/941186050741649489/941186087672500284/app_icon.png')
                .addFields(
                    { name: '!ÎèÑÏõÄ', value: 'LAA BotÏùò Î™ÖÎ†πÏñ¥ Î™©Î°ùÏùÑ ÌôïÏù∏Ìï©ÎãàÎã§.' },
                    { name: '!Ï†ïÎ≥¥', value: 'ÎÇòÏùò Ï†ïÎ≥¥Î•º Ï∂úÎ†•Ìï©ÎãàÎã§. (Î≥ÑÎ™Ö, ÏßÅÏóÖ, Î≥∏Ïù∏ Ïó≠Ìï†)' },
                    { name: '!Ïó≠Ìï†Î∂ÄÏó¨', value: '*\'__üëå-ÏÇ¨Ïö©Ïûê-Ïù∏Ï¶ù__\' Ï±ÑÎÑêÏóêÏÑúÎßå ÏÇ¨Ïö©Í∞ÄÎä•*\nÎîîÏä§ÏΩîÎìú Í∞ÄÏûÖÏãú ÏÇ¨Ïö©Ïûê Ïù∏Ï¶ùÏùÑ Ìï©ÎãàÎã§.' },
                    { name: '!ÏàòÏ†ï', value: '*\'__#‚úé-Ï†ïÎ≥¥ÏàòÏ†ï__\' Ï±ÑÎÑêÏóêÏÑúÎßå ÏÇ¨Ïö© Í∞ÄÎä•*\nÎ≥∏Ïù∏Ïùò Î≥ÑÎ™Ö, ÏÑúÎ≤Ñ, ÌÅ¥ÎûòÏä§Î•º Î≥ÄÍ≤ΩÌï† Îïå ÏÇ¨Ïö©Ìï©ÎãàÎã§.' }
                )
                .setFooter({
                    text: 'Lostark Assistant',
                    iconURL: 'https://cdn.discordapp.com/attachments/941186050741649489/941186087672500284/app_icon.png'
                });

            message.reply({
                embeds: [helpEmbed],
                components: [row],
                ephemeral: true
            });

            const filter = (btnInt) => {
                return message.member.id === btnInt.user.id;
            }

            const collector = message.channel.createMessageComponentCollector({
                filter,
                max: 1,
                time: 1000 * 15
            })

            collector.on('collect', (i) => {
                i.reply({
                    content: 'Î°úÏä§Ìä∏ÏïÑÌÅ¨ Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ ÌîåÎ†àÏù¥Ïä§ÌÜ†Ïñ¥ ÏóΩÎãàÎã§.',
                    ephemeral: true
                })
            })

            collector.on('end', async (collection) => {
                /*collection.forEach((click) => {
                    console.log(click.user.id, click.customId)
                })*/

                if (collection.first()?.customId === 'btnEdit') {
                    // edit the target channel position
                    
                }
            });
        } else if (message.content.split(' ')[0] === prefix+'ÏïÑÏù¥Îîî') {
            await message.reply({
                content: `ÌòÑÏû¨ Ï±ÑÎÑê ID : ${message.channel.id}`,
                ephemeral: true
            });
        }
    }
});


//ÌÖåÏä§Ìä∏Ïö©
//client.login(token);

//Heroku Ï†ÑÏö©
client.login(process.env.TOKEN);